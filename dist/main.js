!function(){"use strict";class t{static createTicket(t){const{id:e}=t,{name:s}=t,{status:i}=t,n=t.created,c=document.createElement("li");c.classList.add("job-item"),c.setAttribute("ticketId",e);const a=document.createElement("div");a.classList.add("completion-circle"),i&&a.classList.add("completed");const o=document.createElement("div");o.classList.add("task-name");const l=document.createElement("H3");l.classList.add("task-name"),l.textContent=s,o.appendChild(l);const r=document.createElement("div");r.classList.add("creation-time"),r.textContent=n;const d=document.createElement("button");d.classList.add("edit-btn");const h=document.createElement("button");return h.classList.add("delete-btn"),c.appendChild(a),c.appendChild(o),c.appendChild(r),c.appendChild(d),c.appendChild(h),c}}class e{constructor(){this.url="https://ahj-http-back.onrender.com/"}async getTicketsList(){const t=fetch(`${this.url}?method=allTickets`,{method:"GET",headers:{"Content-Type":"application/json"}}),e=await t;return JSON.parse(await e.text())}async createTicket(t){const e=fetch(`${this.url}?method=createTicket`,{method:"POST",headers:{"Content-Type":"application/json"},body:t}),s=await e;await s.text()}async deleteTicket(t){const e=fetch(`${this.url}?id=${t}`,{method:"delete",headers:{"Content-Type":"application/json"}}),s=await e;await s.text()}async getDescription(t){const e=fetch(`${this.url}?method=ticketById&id=${t}`,{method:"GET",headers:{"Content-Type":"application/json"}}),s=await e,i=await s.text();return JSON.parse(i)}async update(t){const e=fetch(`${this.url}?method=updateTicket`,{method:"POST",headers:{"Content-Type":"application/json"},body:t}),s=await e;return await s.text()}}const s=document.querySelector(".job-list"),i=new class{constructor(t){this.list=t,this.popup=null,this.ul=t.querySelector("ul"),this.createTicket=this.createTicket.bind(this),this.restart=this.restart.bind(this),this.init=this.init.bind(this),this.getCurrentDate=this.getCurrentDate.bind(this),this.id=null,this.ticketName=null,this.description=null,this.status=null,this.fetcher=new e}init(){this.list.addEventListener("click",this.click),this.restart()}async restart(){this.ul.innerHTML="",(await this.fetcher.getTicketsList()).forEach((e=>{this.ul.appendChild(t.createTicket(e))}))}async showElement(t){if(t.parentElement.querySelector(".task-description"))t.parentElement.querySelector(".task-description").remove();else{const e=t.closest(".job-item").getAttribute("ticketID"),s=await this.fetcher.getDescription(e),i=document.createElement("div");i.classList.add("task-description");const n=document.createElement("p");n.textContent=s[0].description,i.appendChild(n),t.parentElement.appendChild(i)}}click=async t=>{const e=t.target;if(e.classList.contains("task-name"))this.showElement(e);else if(e.classList.contains("completion-circle")){e.classList.contains("completed")?this.status=!1:this.status=!0,e.classList.toggle("completed");const t=e.parentElement.getAttribute("ticketId"),s=await this.fetcher.getDescription(t);this.createTicket(t,e.parentElement.querySelector(".task-name").textContent,s[0].description,this.status)}else if(e.classList.contains("add-job-btn"))this.showPopup("add-ticket");else if(e.classList.contains("ok-button"))e.classList.contains("change-btn")?this.createTicket(this.id,this.popup.querySelector("#name-field-").value,this.popup.querySelector("#description-field-").value):this.createTicket();else if(e.classList.contains("cancel-button"))this.showPopup("show");else if(e.classList.contains("delete-btn")){const t=e.parentElement.getAttribute("ticketId");this.deleteTicket(t)}else e.classList.contains("edit-btn")&&(this.showPopup("change-ticket"),this.showInfoForChange(e.closest(".job-item")))};showPopup=t=>{this.popup=document.querySelector(`.${t}`),this.popup.classList.toggle("show"),this.popup.classList.toggle("hidden")};async createTicket(t,e,s,i=!1){if(t){const n={id:t,name:e,description:s,status:i,created:this.getCurrentDate()};this.fetcher.update(JSON.stringify(n)),location.reload()}else{const t=this.popup.querySelector("#name-field").value,e=this.popup.querySelector("#description-field").value,s=JSON.stringify({name:t,description:e});this.fetcher.createTicket(s),this.popup.querySelector("#name-field").value="",this.popup.querySelector("#description-field").value="",this.popup.classList.toggle("hidden"),this.popup.classList.toggle("show"),location.reload()}}deleteTicket(t){this.fetcher.deleteTicket(t),location.reload()}async showInfoForChange(t){const e=t.querySelector("H3").textContent;this.id=t.getAttribute("ticketId");const s=await this.fetcher.getDescription(this.id);this.popup.querySelector("#name-field-").value=e,this.popup.querySelector("#description-field-").value=s[0].description}getCurrentDate(){const t=new Date;return`${String(t.getDate()).padStart(2,"0")}.${String(t.getMonth()+1).padStart(2,"0")}.${t.getFullYear()}`}}(s);i.init()}();
//# sourceMappingURL=main.js.map